/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int height(TreeNode node, int height){
        if(node == null){
            return height;
        }
        
        int lh = height(node.left, height+1);
        int rh = height(node.right, height+1);
        
        if(lh > rh){
            return lh;
        }else{
            return rh;
        }        
    }
    
    public boolean isBalanced(TreeNode root) {
        
        if(root == null){
            return true;
        }
        
        if(root.left == null && root.right == null){
            return true;
        }
        
        int lheight = height(root.left, 1);
        int rheight = height(root.right, 1);
        
        System.out.println(lheight);
        System.out.println(rheight);
        
        if(Math.abs(lheight - rheight) == 0 || Math.abs(lheight - rheight) == 1){
            return true;
        }
        
        return false;
    }
}
