/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        Integer index = -1;
        HashMap<ListNode, Integer> nodeMap = new HashMap<>();
        
        if(head==null){
            return head;
        }else if(head.next == null){
            return null;
        }else{
            ListNode temp = head;
            while(temp != null){
                if(nodeMap.containsKey(temp)){
                    //int location = nodeMap.get(temp);
                    return temp;
                }else{
                    index = index + 1;
                    nodeMap.put(temp,index);
                }
                temp = temp.next;
            }
        }
        
        return null;
    }
}
