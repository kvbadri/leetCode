class MinStack {
    Stack<Integer> stack;
    Integer minElement = Integer.MAX_VALUE;
    public MinStack() {
        stack = new Stack<>();
    }
    
    public void push(int val) {
        if(stack.isEmpty()){
            minElement = val;
            stack.push(val);               
        }else{
            if(val < minElement){
                stack.push((2*val) - minElement);
                minElement = val;                
            }else{
                stack.push(val);                
            }
        }
    }
    
    public void pop() {
        if(!stack.isEmpty()){
            Integer topElement = stack.pop();            
            if(topElement < minElement){
                minElement = (2*minElement) - topElement;                
            }
        }
    }
    
    public int top() {        
        Integer topElement = stack.peek();
        if(topElement < minElement){
            return minElement;
        }else{
            return stack.peek();
        }
        
    }
    
    public int getMin() {                
        return minElement;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
