/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode first;
        ListNode last;                
        last = head;        
        first = head;
        int m=1,n=1;
        boolean result = true;
        
        if(head != null){
            while(last.next != null){
                last = last.next;
                n++;
            }
            
            while(m<n){                
                if(first.val == last.val){                    
                    result = true;                    
                }else{
                    result = false;
                    break;
                }
                m++;
                n--;
                first = first.next;                
                last = findNode(n, head);
            }                        
        }
        
        return result;                
    }
    public ListNode findNode(int x,ListNode head){
        ListNode find = head;
        for(int i=0;i<x-1;i++){
            find = find.next;
        }        
        return find;
    }
}
