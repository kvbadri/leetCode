/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        ListNode temp,temp1;
        int noofNodes = 0;
        if(head == null){
            return head;
        }else{
            temp = head;
            while(temp != null){
                temp = temp.next;
                noofNodes++;
            }
        }        
        int rem = k % noofNodes;        
        if(k == noofNodes){
            return head;
        }else if(noofNodes == 1){
            return head;
        }else{
            for(int i=0;i<rem;i++){
                head = rotateList(head);
            }
        }        
                
        return head;
    }
    
    public ListNode rotateList(ListNode dummy){
        ListNode temp = dummy;
        while(temp.next != null){
              temp = temp.next;
        }
        ListNode temp1 = dummy;
        while(temp1.next != temp){
             temp1 = temp1.next;
        }
            
        ListNode createNode = new ListNode(temp.val);
        temp1.next = null;
        createNode.next = dummy;
        dummy = createNode;
        
        return dummy;
    }
}
